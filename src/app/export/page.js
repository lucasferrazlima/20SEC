'use client';

import '../globals.css';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import '@fontsource/bebas-neue';

export default function ExportPage() {
  const router = useRouter();
  const [likedTracks, setLikedTracks] = useState([]);
  const [tracksUris, setTracksUris] = useState('');

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const likedTracksInLocalStorage = localStorage.getItem('likedTracks');
      if (likedTracksInLocalStorage) {
        const parsedLikedTracks = JSON.parse(likedTracksInLocalStorage);
        const token = localStorage.getItem('token');
        setLikedTracks(parsedLikedTracks);
        localStorage.removeItem('likedTracks');
      } else {
        router.push('/discover');
      }
    }
  }, []);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      if (likedTracks.length > 0) {
        const token = localStorage.getItem('token');
        exportPlaylist(token);
      }
    }
  }, [likedTracks]);

  async function exportPlaylist(accessToken) {
    const userId = localStorage.getItem('userId');
    const playlistName = 'Created by 20SEC';
    const playlistDescription = 'A playlist generated by 20SEC';

    const res = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${accessToken}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        name: playlistName,
        description: playlistDescription,
        public: false,
      }),
    });

    const data = await res.json();
    const playlistId = data.id;

    await addTracksToPlaylist(accessToken, playlistId, likedTracks);
  }

  async function addTracksToPlaylist(accessToken, playlistId, tracks) {
    const uris = tracks.map((track) => track.uri);

    const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${accessToken}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        uris,
      }),
    });

    // Set the URIs for future use if needed
    setTracksUris(uris);
  }

  return (
    <div className="flex flex-col items-center justify-center h-screen bg-secondary">
      <div className="max-w-md px-6 py-12 bg-secondary shadow-lg h-screen sm:rounded-lg sm:h-auto">
        <div className="flex items-center justify-center mb-8 gap-3 border-b-2 pb-6 border-gray-100">
          <h1 className="text-4xl text-primary font-bebas md:text-5xl">20SEC</h1>
          <span className="text-sm font-bebas text-tertiary">for</span>
          <img src="/spotify.svg" alt="Spotify logo" className="w-8 h-8" />
        </div>
        <h1 className="text-lg text-tertiary mb-6">Playlist created successfully!</h1>
        {likedTracks.length > 0 && (
          <>
            <h2 className="text-2xl font-semibold text-tertiary mb-4">Liked Songs</h2>
            <div className="max-h-80 overflow-y-scroll overflow-x-hidden scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100">
              <ul className="grid grid-cols-1 gap-4">
                {likedTracks.map((track) => (
                  <li key={track.id} className="flex items-center gap-4">
                    <img src={track.album.images[0].url} alt={`${track.name} Album Cover`} className="w-16 h-16" />
                    <div className="">
                      <h3 className="text-md font-semibold w-full sm:w-80">{track.name}</h3>
                      <p className="text-sm text-quaternary w-full sm:w-80">{track.artists.map((artist) => artist.name).join(', ')}</p>
                    </div>
                  </li>
                ))}
              </ul>
            </div>
          </>
        )}
        <div className="flex justify-center">
          <button
            type="button"
            className="bg-primary hover:bg-green-600 text-white font-bold py-2 px-4 rounded mt-8"
            onClick={() => router.push('/discover')}
          >
            Discover More Music
          </button>
        </div>
      </div>
    </div>
  );
}
